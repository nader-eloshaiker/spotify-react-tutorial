// tslint:disable
/**
 * Spotify Web API
 * Welcome to the _Spotify Web API_ specification. For more information about how to use the API, check out [Spotify\'s developer site](https://developer.spotify.com/web-api/). 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    Followers,
    Image,
} from './';

/**
 * @export
 * @interface Artist
 */
export interface Artist {
    /**
     * Known external URLs for this artist.
     * @type {{ [key: string]: string; }}
     * @memberof Artist
     */
    external_urls?: { [key: string]: string; };
    /**
     * @type {Followers}
     * @memberof Artist
     */
    followers?: Followers;
    /**
     * A list of the genres the artist is associated with. For example: \'Prog Rock\', \'Post-Grunge\'. (If not yet classified, the array is empty.)
     * @type {Array<string>}
     * @memberof Artist
     */
    genres?: Array<string>;
    /**
     * A link to the Web API endpoint providing full details of the artist.
     * @type {string}
     * @memberof Artist
     */
    href?: string;
    /**
     * The Spotify ID for the artist.
     * @type {string}
     * @memberof Artist
     */
    id?: string;
    /**
     * Images of the artist in various sizes, widest first.
     * @type {Array<Image>}
     * @memberof Artist
     */
    images?: Array<Image>;
    /**
     * The name of the artist.
     * @type {string}
     * @memberof Artist
     */
    name?: string;
    /**
     * The popularity of the artist. The value will be between 0 and 100, with 100 being the most popular. The artist\'s popularity is calculated from the popularity of all the artist\'s tracks.
     * @type {number}
     * @memberof Artist
     */
    popularity?: number;
    /**
     * The object type: \'artist\'
     * @type {string}
     * @memberof Artist
     */
    type?: string;
    /**
     * The Spotify URI for the artist.
     * @type {string}
     * @memberof Artist
     */
    uri?: string;
}
