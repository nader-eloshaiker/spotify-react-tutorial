// tslint:disable
/**
 * Spotify Web API
 * Welcome to the _Spotify Web API_ specification. For more information about how to use the API, check out [Spotify\'s developer site](https://developer.spotify.com/web-api/). 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    AlbumCopyrights,
    Artist,
    Image,
    TrackSimplePage,
} from './';

/**
 * @export
 * @interface Album
 */
export interface Album {
    /**
     * The type of the album: one of \'album\', \'single\', or \'compilation\'.
     * @type {string}
     * @memberof Album
     */
    album_type?: string;
    /**
     * The artists of the album. Each artist object includes a link in href to more detailed information about the artist.
     * @type {Array<Artist>}
     * @memberof Album
     */
    artists?: Array<Artist>;
    /**
     * The markets in which the album is available: ISO 3166-1 alpha-2 country codes. Note that an album is considered available in a market when at least 1 of its tracks is available in that market.
     * @type {Array<string>}
     * @memberof Album
     */
    available_markets?: Array<string>;
    /**
     * The copyright statements of the album.
     * @type {Array<AlbumCopyrights>}
     * @memberof Album
     */
    copyrights?: Array<AlbumCopyrights>;
    /**
     * Known external IDs for this album.
     * @type {{ [key: string]: string; }}
     * @memberof Album
     */
    external_ids?: { [key: string]: string; };
    /**
     * Known external URLs for this album.
     * @type {{ [key: string]: string; }}
     * @memberof Album
     */
    external_urls?: { [key: string]: string; };
    /**
     * A list of the genres used to classify the album. For example: \'Prog Rock\', \'Post-Grunge\'. (If not yet classified, the array is empty.)
     * @type {Array<string>}
     * @memberof Album
     */
    genres?: Array<string>;
    /**
     * A link to the Web API endpoint providing full details of the album.
     * @type {string}
     * @memberof Album
     */
    href?: string;
    /**
     * The Spotify ID for the album.
     * @type {string}
     * @memberof Album
     */
    id?: string;
    /**
     * The cover art for the album in various sizes, widest first.
     * @type {Array<Image>}
     * @memberof Album
     */
    images?: Array<Image>;
    /**
     * The name of the album.
     * @type {string}
     * @memberof Album
     */
    name?: string;
    /**
     * The popularity of the album. The value will be between 0 and 100, with 100 being the most popular. The popularity is calculated from the popularity of the album\'s individual tracks.
     * @type {number}
     * @memberof Album
     */
    popularity?: number;
    /**
     * The date the album was first released, for example \'1981-12-15\'. Depending on the precision, it might be shown as \'1981\' or \'1981-12\'.
     * @type {string}
     * @memberof Album
     */
    release_date?: string;
    /**
     * The precision with which release_date value is known: \'year\', \'month\', or \'day\'.
     * @type {string}
     * @memberof Album
     */
    release_date_precision?: string;
    /**
     * @type {TrackSimplePage}
     * @memberof Album
     */
    tracks?: TrackSimplePage;
    /**
     * The object type: \'album\'.
     * @type {string}
     * @memberof Album
     */
    type?: string;
    /**
     * The Spotify URI for the album.
     * @type {string}
     * @memberof Album
     */
    uri?: string;
}
